name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checks out repo
      uses: actions/checkout@v3
      
    - name: Builds docker image and push to AWS ECR
      uses: kciter/aws-ecr-action@v4
      with:
        # The AWS access key id
        access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        # The AWS secret access key
        secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # AWS Account ID
        account_id: ${{ secrets.AWS_ACCOUNT_ID }}
        # A role to assume under the account_id account.
        #assume_role: # optional, default is 
        # Name of your ECR repository
        repo: tgtg-poller
        # The AWS region
        region: eu-central-1
        # Set this to true to create the repository if it does not already exist
        #create_repo: # optional
        # Set this to true to set a policy on the repository
        #set_repo_policy: # optional
        # Set this to repository policy statement json file. only used if the set_repo_policy is set to true
        #repo_policy_file: # optional, default is repo-policy.json
        # Comma-separated string of ECR image tags
        #tags: # optional, default is latest
        # Name of Dockerfile to use optional, default is Dockerfile
        dockerfile: ./compose/prod/Dockerfile
        # Extra flags to pass to docker build (see docs.docker.com/engine/reference/commandline/build)
        #extra_build_args: # optional, default is 
        # Images to use as cache for the docker build (see `--cache-from` argument docs.docker.com/engine/reference/commandline/build)
        #cache_from: # optional, default is 
        # Path to Dockerfile, defaults to the working directory
        path: .
        # Relative path from top-level to script to run before Docker build
        #prebuild_script: # optional
    - name: AWS Lambda Deploy
        # You may pin to the exact commit or the version.
        # uses: appleboy/lambda-action@7ef3dc1495565506e257e9950b6168191c5213c0
      uses: appleboy/lambda-action@v0.1.5
      with:
          # AWS Region
          aws_region: eu-central-1
          # AWS ACCESS KEY 
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # AWS SECRET KEY
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # AWS Session token
          # aws_session_token: # optional
          # AWS profile
          # aws_profile: # optional
          # AWS lambda function name
          function_name: tgtg-poller-lambda
          # An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
          # s3_bucket: # optional
          # The Amazon S3 key of the deployment package.
          # s3_key: # optional
          # AWS lambda s3 object version
          # s3_object_version: # optional
          # AWS lambda zip file
          # zip_file: # optional
          # zip file list
          # source: # optional
          # Set to true to validate the request parameters and access permissions without modifying the function code.
          # dry_run: # optional
          # Show debug message after upload the lambda successfully.
          # debug: # optional
          # Set to true to publish a new version of the function after updating the code.
          # publish: # optional, default is true
          # Only update the function if the revision ID matches the ID that is specified.
          # reversion_id: # optional
          # The amount of memory that your function has access to. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value must be a multiple of 64 MB.
          # memory_size: # optional, default is 0
          # The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds.
          # timeout: # optional, default is 0
          # The name of the method within your code that Lambda calls to execute your function.
          # handler: # optional
          # The Amazon Resource Name (ARN) of the function execution role.
          # role: # optional
          # The identifier of the function runtime.
          # runtime: # optional
          # Lambda Environment variables.
          # environment: # optional
          # A list of function layers, to add to the function execution environment. Specify each layer by its ARN, including the version
          # layers: # optional
          # URI of a container image in the Amazon ECR registry.
          image_uri: 166718199143.dkr.ecr.eu-central-1.amazonaws.com/tgtg-poller:latest
          # Select the VPC subnets for Lambda to use to set up your VPC configuration.
          # subnets: # optional
          # Choose the VPC security groups for Lambda to use to set up your VPC configuration.
          # securitygroups: # optional
          # A description of the function.
          # description: # optional
      
      
